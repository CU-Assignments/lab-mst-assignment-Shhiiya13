import java.util.*;

public class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
      
        Map<Integer, Integer> nextGreaterMap = new HashMap<>();
        Stack<Integer> stack = new Stack<>();
        
        
        for (int num : nums2) {
            // Pop elements from stack that are less than or equal to the current element
            while (!stack.isEmpty() && stack.peek() <= num) {
                stack.pop();
            }
            
            if (!stack.isEmpty()) {
                nextGreaterMap.put(num, stack.peek());
            } else {
                // If stack is empty, there is no next greater element for num
                nextGreaterMap.put(num, -1);
            }
            // Push the current element onto the stack
            stack.push(num);
        }
        
        
        int[] result = new int[nums1.length];
        for (int i = 0; i < nums1.length; i++) {
            result[i] = nextGreaterMap.get(nums1[i]);
        }
        
        return result;
    }
    
    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums1 = {4, 1, 2};
        int[] nums2 = {1, 3, 4, 2};
        int[] result = solution.nextGreaterElement(nums1, nums2);
        System.out.println(Arrays.toString(result)); // Output: [-1, 3, -1]
    }
}
